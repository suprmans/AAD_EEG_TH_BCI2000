<!DOCTYPE html>
<html lang="en" dir="ltr">
<head>
<meta charset="UTF-8"/>
<title>Programming Tutorial:Implementing an advanced Matlab-based Filter - BCI2000 Help</title>
<link rel='shortcut icon' href='../../rsrc/favicon.ico' />
<style type='text/css'>
html { font-size:95%; font-family:arial,helvetica,sans-serif }
.printfooter { display:none }
#tocmain { font-size:81%; font-weight:bold; color:grey; background-color:white; border:1px solid black; padding:1em; z-index:10; position:fixed; left:-1px; top:-1px; width:150px; }
#tocmain a { color:black; text-decoration:none }
#tocmain ul { margin:0 0 0 0.4em; padding:0.1em 0 0 0.1em; list-style-position:outside; list-style-type:disc }
#tocmain li { text-indent:0; margin:0 0 0 1em; padding: 0 0 0 0 }
#tocmain p { margin:0; padding:0.1em 0 0 0.1em }
#tocmain .toc1 { margin-left:1.25em; }
#tocmain .toc2 { margin-left:2.25em; }
#tocmain .toc3 { margin-left:3.25em; }
#article { font-size:91%; position:absolute; left:200px; right:0; padding:1em; margin:0 }
</style>
</head>
<body>
 <div id='tocmain'>
 <a href='Main_Page.html'><img src='../../rsrc/bci2000logo.svg' alt='[Main Page]' /></a> <hr class="sep" /><p class="toc0"><a href="User_Tutorial%253ABCI2000_Tour.html">GettingStarted</a></p><ul></ul><p class="toc0"><a href="User_Reference%253AContents.html">User Manual</a></p><ul></ul><p class="toc0"><a href="Technical_Reference%253AContents.html">Technical Reference</a></p><ul></ul><p class="toc0"><a href="Programming_Reference%253AContents.html">Programming Manual</a></p><ul><li class="toc1">Concepts</li><ul><li class="toc2"><a href="Programming_Reference%253AFilter_Chain.html">Filter Chain</a></li><li class="toc2"><a href="Programming_Reference%253ASignals.html">Signals</a></li><li class="toc2"><a href="Programming_Reference%253AError_Handling.html">Error Handling</a></li><li class="toc2"><a href="Programming_Reference%253ALocalization.html">Localization</a></li><li class="toc2"><a href="Programming_Reference%253ARapid_Development.html">Rapid Development</a></li></ul><li class="toc1">Reference</li><ul><li class="toc2"><a href="Programming_Reference%253AGenericFilter_Class.html">GenericFilter</a></li><li class="toc2"><a href="Programming_Reference%253AEnvironment_Class.html">Environment</a></li><li class="toc2"><a href="Programming_Reference%253AGenericVisualization_Class.html">GenericVisualization</a></li><li class="toc2"><a href="Programming_Reference%253AErrors_and_Warnings.html">Errors and Warnings</a></li><li class="toc2"><a href="Programming_Reference%253ADebug_Output.html">Debug Output</a></li></ul><li class="toc1">Data Acquisition</li><ul><li class="toc2"><a href="Programming_Reference%253AGenericADC_Class.html">GenericADC</a></li></ul><li class="toc1">Data Storage</li><ul><li class="toc2"><a href="Programming_Reference%253AGenericFileWriter_Class.html">GenericFileWriter</a></li><li class="toc2"><a href="Programming_Reference%253ABCI2000FileReader_Class.html">BCI2000FileReader</a></li></ul><li class="toc1">Signal Processing</li><ul><li class="toc2"><a href="Programming_Reference%253AIIRFilterBase_Class.html">IIR Filters</a></li></ul><li class="toc1">Application Modules</li><ul><li class="toc2"><a href="Programming_Reference%253AApplicationBase_Class.html">ApplicationBase</a></li><li class="toc2"><a href="Programming_Reference%253AFeedbackTask_Class.html">FeedbackTask</a></li><li class="toc2"><a href="Programming_Reference%253AStimulusTask_Class.html">StimulusTask</a></li><li class="toc2"><a href="Programming_Reference%253A3D_API.html">3D API</a></li></ul><li class="toc1">Howtos</li><ul><li class="toc2"><a href="Programming_Howto%253ABuilding_BCI2000.html">Building BCI2000</a></li><li class="toc2"><a href="Programming_Howto%253ASVN_Client_Setup.html">SVN Client Setup</a></li><li class="toc2"><a href="Programming_Howto%253AUsing_TortoiseSVN.html">Using TortoiseSVN</a></li></ul><li class="toc1"><a href="Programming_FAQ.html">FAQ</a></li><li class="toc1">Tutorials</li><ul><li class="toc2"><a href="Programming_Tutorial%253AImplementing_a_Data_Acquisition_Module.html">Data Acquisition</a></li><li class="toc2"><a href="Programming_Tutorial%253AImplementing_a_Signal_Processing_Filter.html">Signal Processing</a></li><li class="toc2"><a href="Programming_Tutorial%253AImplementing_a_Matlab-based_Filter.html">Matlab Signal Processing</a></li></ul></ul><p class="toc0"><a href="Contributions%253AContents.html">Contributions</a></p><ul></ul><hr class="sep" /><p class="toc0"><a href="BCI2000_Glossary.html">BCI2000 Glossary</a></p> </div>
 <div id='article'>
 <h1 class = "pagetitle">Implementing an advanced Matlab-based Filter</h1>
 <p class = "subtitle">Programming Tutorial</p>
 <hr class = "sep" />
 <div id="mw-content-text" class="mw-body-content mw-content-ltr" lang="en" dir="ltr"><div class="mw-parser-output"><p>This tutorial, written by Robert Oostenveld, shows you how to implement a filter based on a beamforming algorithm where the beamformer is updated in real-time, based on the covariance matrix of its input data.
</p>
<div id="toc" class="toc" role="navigation" aria-labelledby="mw-toc-heading"><input type="checkbox" role="button" id="toctogglecheckbox" class="toctogglecheckbox" style="display:none" /><div class="toctitle" lang="en" dir="ltr"><h2 id="mw-toc-heading">Contents</h2><span class="toctogglespan"><label class="toctogglelabel" for="toctogglecheckbox"></label></span></div>
<ul>
<li class="toclevel-1 tocsection-1"><a href="Programming_Tutorial%253AImplementing_an_advanced_Matlab-based_Filter.html#What_is_Matlab?"><span class="tocnumber">1</span> <span class="toctext">What is Matlab?</span></a>
<ul>
<li class="toclevel-2 tocsection-2"><a href="Programming_Tutorial%253AImplementing_an_advanced_Matlab-based_Filter.html#Advantages_of_Matlab"><span class="tocnumber">1.1</span> <span class="toctext">Advantages of Matlab</span></a></li>
<li class="toclevel-2 tocsection-3"><a href="Programming_Tutorial%253AImplementing_an_advanced_Matlab-based_Filter.html#Disadvantages_of_Matlab"><span class="tocnumber">1.2</span> <span class="toctext">Disadvantages of Matlab</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-4"><a href="Programming_Tutorial%253AImplementing_an_advanced_Matlab-based_Filter.html#Real_time_processing_for_BCI"><span class="tocnumber">2</span> <span class="toctext">Real time processing for BCI</span></a></li>
<li class="toclevel-1 tocsection-5"><a href="Programming_Tutorial%253AImplementing_an_advanced_Matlab-based_Filter.html#Motivation_for_combining_BCI2000_and_Matlab"><span class="tocnumber">3</span> <span class="toctext">Motivation for combining BCI2000 and Matlab</span></a></li>
<li class="toclevel-1 tocsection-6"><a href="Programming_Tutorial%253AImplementing_an_advanced_Matlab-based_Filter.html#Matlab_in_the_BCI2000_pipeline"><span class="tocnumber">4</span> <span class="toctext">Matlab in the BCI2000 pipeline</span></a></li>
<li class="toclevel-1 tocsection-7"><a href="Programming_Tutorial%253AImplementing_an_advanced_Matlab-based_Filter.html#Filter_example:_linear_classification_using_a_beamformer"><span class="tocnumber">5</span> <span class="toctext">Filter example: linear classification using a beamformer</span></a>
<ul>
<li class="toclevel-2 tocsection-8"><a href="Programming_Tutorial%253AImplementing_an_advanced_Matlab-based_Filter.html#Adaptive_Spatial_Filtering"><span class="tocnumber">5.1</span> <span class="toctext">Adaptive Spatial Filtering</span></a></li>
<li class="toclevel-2 tocsection-9"><a href="Programming_Tutorial%253AImplementing_an_advanced_Matlab-based_Filter.html#Implementation_with_the_BCI2000_Matlab_filter"><span class="tocnumber">5.2</span> <span class="toctext">Implementation with the BCI2000 Matlab filter</span></a>
<ul>
<li class="toclevel-3 tocsection-10"><a href="Programming_Tutorial%253AImplementing_an_advanced_Matlab-based_Filter.html#bci_StartRun_function"><span class="tocnumber">5.2.1</span> <span class="toctext">bci_StartRun function</span></a></li>
<li class="toclevel-3 tocsection-11"><a href="Programming_Tutorial%253AImplementing_an_advanced_Matlab-based_Filter.html#bci_Process_Function"><span class="tocnumber">5.2.2</span> <span class="toctext">bci_Process Function</span></a></li>
</ul>
</li>
<li class="toclevel-2 tocsection-12"><a href="Programming_Tutorial%253AImplementing_an_advanced_Matlab-based_Filter.html#Beamformer_source_reconstruction"><span class="tocnumber">5.3</span> <span class="toctext">Beamformer source reconstruction</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-13"><a href="Programming_Tutorial%253AImplementing_an_advanced_Matlab-based_Filter.html#Conclusions"><span class="tocnumber">6</span> <span class="toctext">Conclusions</span></a></li>
<li class="toclevel-1 tocsection-14"><a href="Programming_Tutorial%253AImplementing_an_advanced_Matlab-based_Filter.html#See_also"><span class="tocnumber">7</span> <span class="toctext">See also</span></a></li>
</ul>
</div>

<h2><span id="What_is_Matlab.3F"></span><span class="mw-headline" id="What_is_Matlab?">What is Matlab?</span></h2>
<p>“MATLAB® is a high-level language and interactive environment that enables you to perform computationally intensive tasks faster than with traditional programming languages such as C, C++, and Fortran.”
</p>
<h3><span class="mw-headline" id="Advantages_of_Matlab">Advantages of Matlab</span></h3>
<ul><li>interactive</li>
<li>simple syntax</li>
<li>no explicit declaration of variables and functions required</li>
<li>garbage collection</li>
<li>standard for neuroscience data analysis</li>
<li>many toolboxes available</li>
<li>many algorithms implemented</li>
<li>many data visualisation tools</li></ul>
<h3><span class="mw-headline" id="Disadvantages_of_Matlab">Disadvantages of Matlab</span></h3>
<ul><li>slower than compiled code</li>
<li>default double precision</li>
<li>not open source</li>
<li>expensive</li>
<li>language suitable for RAD, not so much for large projects</li></ul>
<h2><span class="mw-headline" id="Real_time_processing_for_BCI">Real time processing for BCI</span></h2>
<ul><li>EEG alpha oscillation @10Hz</li></ul>
<dl><dd>duration ~100 ms</dd>
<dd>decision every xx ms?</dd></dl>
<ul><li>Processing as fast as possible</li></ul>
<dl><dt><dl><dd>"real time"</dd></dl></dt></dl>
<dd>In computer science, real-time computing is the study of hardware and software systems which are subject to a "real-time constraint”, i.e., operational deadlines from event to system response.</dd>
<dd>By contrast, a non-real-time system is one for which there is no deadline, even if fast response or high performance is desired or even preferred.</dd>
<ul><li>Deadline requirements vary, e.g.</li></ul>
<dl><dd><a href="https://www.bci2000.org/mediawiki/index.php/File:RealTimeProcessing.png" class="image"><img alt="RealTimeProcessing.png" src="../images/5/51/RealTimeProcessing.png" decoding="async" width="400" height="252" /></a></dd>
<dd>continuous classification -&gt; hard deadline</dd>
<dd>incremental evidence -&gt; soft deadline</dd></dl>
<h2><span class="mw-headline" id="Motivation_for_combining_BCI2000_and_Matlab">Motivation for combining BCI2000 and Matlab</span></h2>
<ul><li>rapid application development</li>
<li>try out various algorithms</li>
<li>offline analysis of data</li>
<li>port offline analysis to online</li>
<li>Matlab is fast enough for quite some computations</li></ul>
<h2><span class="mw-headline" id="Matlab_in_the_BCI2000_pipeline">Matlab in the BCI2000 pipeline</span></h2>
<p><a href="https://www.bci2000.org/mediawiki/index.php/File:BCI2000Background.png" class="image"><img alt="BCI2000Background.png" src="../images/0/01/BCI2000Background.png" decoding="async" width="400" height="265" /></a>
</p>
<ul><li>BCI2000 filters are pipelined</li>
<li>each filter is a C++ object, there exists a Matlab filter that translates the C++ interface into Matlab</li></ul>
<dl><dd><dl><dd>constructor -- define states and parameters, start Matlab engine</dd>
<dd>Preflight() -- check validity of parameters</dd>
<dd>Initialize() -- get parameter values</dd>
<dd>StartRun() -- setup computational space</dd>
<dd>StopRun() -- cleanup computational space</dd>
<dd>while data is streaming
<dl><dd>Process() -- perform actual computation</dd></dl></dd>
<dd>destructor -- stop Matlab engine</dd></dl></dd></dl>
<ul><li>correspondingly, there is a Matlab function corresponding to each C++ member function:</li></ul>
<dl><dd><dl><dd>bci_Construct() -- define states and parameters, start Matlab engine</dd>
<dd>bci_Preflight() -- check validity of parameters</dd>
<dd>bci_Initialize() -- get parameter values</dd>
<dd>bci_StartRun() -- setup computational space</dd>
<dd>while data is streaming
<dl><dd>bci_Process() -- process a single data block</dd></dl></dd>
<dd>bci_StopRun() -- cleanup computational space</dd>
<dd>destructor() -- stop Matlab engine</dd></dl></dd></dl>
<h2><span class="mw-headline" id="Filter_example:_linear_classification_using_a_beamformer">Filter example: linear classification using a beamformer</span></h2>
<p>Beamforming is a technique to extract source signals from a multi-channel recording.
In this hands-on tutorial, we will use an adaptive spatial beamformer to compute a biophysically motivated source projection which is adapted to data covariance.
</p>
<h3><span class="mw-headline" id="Adaptive_Spatial_Filtering">Adaptive Spatial Filtering</span></h3>
<p>Region in the brain: <span class="mwe-math-element"><span class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="display: none;"><math xmlns="http://www.w3.org/1998/Math/MathML"  alttext="{\displaystyle r}">
  <semantics>
    <mrow class="MJX-TeXAtom-ORD">
      <mstyle displaystyle="true" scriptlevel="0">
        <mi>r</mi>
      </mstyle>
    </mrow>
    <annotation encoding="application/x-tex">{\displaystyle r}</annotation>
  </semantics>
</math></span><img src="https://wikimedia.org/api/rest_v1/media/math/render/svg/0d1ecb613aa2984f0576f70f86650b7c2a132538" class="mwe-math-fallback-image-inline" aria-hidden="true" style="vertical-align: -0.338ex; width:1.049ex; height:1.676ex;" alt="{\displaystyle r}"/></span>
</p><p>Forward model: <span class="mwe-math-element"><span class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="display: none;"><math xmlns="http://www.w3.org/1998/Math/MathML"  alttext="{\displaystyle H(r)}">
  <semantics>
    <mrow class="MJX-TeXAtom-ORD">
      <mstyle displaystyle="true" scriptlevel="0">
        <mi>H</mi>
        <mo stretchy="false">(</mo>
        <mi>r</mi>
        <mo stretchy="false">)</mo>
      </mstyle>
    </mrow>
    <annotation encoding="application/x-tex">{\displaystyle H(r)}</annotation>
  </semantics>
</math></span><img src="https://wikimedia.org/api/rest_v1/media/math/render/svg/ef8e1bfe75eb7ce7b377435218d4632baafe981d" class="mwe-math-fallback-image-inline" aria-hidden="true" style="vertical-align: -0.838ex; width:4.922ex; height:2.843ex;" alt="{\displaystyle H(r)}"/></span>
</p><p>Assumed neural activity: <span class="mwe-math-element"><span class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="display: none;"><math xmlns="http://www.w3.org/1998/Math/MathML"  alttext="{\displaystyle y_{r}(t)}">
  <semantics>
    <mrow class="MJX-TeXAtom-ORD">
      <mstyle displaystyle="true" scriptlevel="0">
        <msub>
          <mi>y</mi>
          <mrow class="MJX-TeXAtom-ORD">
            <mi>r</mi>
          </mrow>
        </msub>
        <mo stretchy="false">(</mo>
        <mi>t</mi>
        <mo stretchy="false">)</mo>
      </mstyle>
    </mrow>
    <annotation encoding="application/x-tex">{\displaystyle y_{r}(t)}</annotation>
  </semantics>
</math></span><img src="https://wikimedia.org/api/rest_v1/media/math/render/svg/67c8c088831fbc9625fb9de8d922295c173bd366" class="mwe-math-fallback-image-inline" aria-hidden="true" style="vertical-align: -0.838ex; width:4.762ex; height:2.843ex;" alt="{\displaystyle y_{r}(t)}"/></span>
</p><p>Model for the projection of the source to the channels (forward model <span class="mwe-math-element"><span class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="display: none;"><math xmlns="http://www.w3.org/1998/Math/MathML"  alttext="{\displaystyle H}">
  <semantics>
    <mrow class="MJX-TeXAtom-ORD">
      <mstyle displaystyle="true" scriptlevel="0">
        <mi>H</mi>
      </mstyle>
    </mrow>
    <annotation encoding="application/x-tex">{\displaystyle H}</annotation>
  </semantics>
</math></span><img src="https://wikimedia.org/api/rest_v1/media/math/render/svg/75a9edddcca2f782014371f75dca39d7e13a9c1b" class="mwe-math-fallback-image-inline" aria-hidden="true" style="vertical-align: -0.338ex; width:2.064ex; height:2.176ex;" alt="{\displaystyle H}"/></span>):
</p><p><span class="mwe-math-element"><span class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="display: none;"><math xmlns="http://www.w3.org/1998/Math/MathML"  alttext="{\displaystyle x(t)=H(r)y_{r}(t)+n(t)}">
  <semantics>
    <mrow class="MJX-TeXAtom-ORD">
      <mstyle displaystyle="true" scriptlevel="0">
        <mi>x</mi>
        <mo stretchy="false">(</mo>
        <mi>t</mi>
        <mo stretchy="false">)</mo>
        <mo>=</mo>
        <mi>H</mi>
        <mo stretchy="false">(</mo>
        <mi>r</mi>
        <mo stretchy="false">)</mo>
        <msub>
          <mi>y</mi>
          <mrow class="MJX-TeXAtom-ORD">
            <mi>r</mi>
          </mrow>
        </msub>
        <mo stretchy="false">(</mo>
        <mi>t</mi>
        <mo stretchy="false">)</mo>
        <mo>+</mo>
        <mi>n</mi>
        <mo stretchy="false">(</mo>
        <mi>t</mi>
        <mo stretchy="false">)</mo>
      </mstyle>
    </mrow>
    <annotation encoding="application/x-tex">{\displaystyle x(t)=H(r)y_{r}(t)+n(t)}</annotation>
  </semantics>
</math></span><img src="https://wikimedia.org/api/rest_v1/media/math/render/svg/ad6f804c8ac568da7186a5335b0a1387a6b10a9d" class="mwe-math-fallback-image-inline" aria-hidden="true" style="vertical-align: -0.838ex; width:23.645ex; height:2.843ex;" alt="{\displaystyle x(t)=H(r)y_{r}(t)+n(t)}"/></span>
</p><p>Estimate the strength of activity of the neural tissue at location <span class="mwe-math-element"><span class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="display: none;"><math xmlns="http://www.w3.org/1998/Math/MathML"  alttext="{\displaystyle r&lt;/math&lt;&lt;math&gt;s_{r}(t)=w(r)^{T}x(t)}">
  <semantics>
    <mrow class="MJX-TeXAtom-ORD">
      <mstyle displaystyle="true" scriptlevel="0">
        <mi>r</mi>
        <mo>&lt;</mo>
        <mrow class="MJX-TeXAtom-ORD">
          <mo>/</mo>
        </mrow>
        <mi>m</mi>
        <mi>a</mi>
        <mi>t</mi>
        <mi>h</mi>
        <mo>&lt;&lt;</mo>
        <mi>m</mi>
        <mi>a</mi>
        <mi>t</mi>
        <mi>h</mi>
        <mo>&gt;</mo>
        <msub>
          <mi>s</mi>
          <mrow class="MJX-TeXAtom-ORD">
            <mi>r</mi>
          </mrow>
        </msub>
        <mo stretchy="false">(</mo>
        <mi>t</mi>
        <mo stretchy="false">)</mo>
        <mo>=</mo>
        <mi>w</mi>
        <mo stretchy="false">(</mo>
        <mi>r</mi>
        <msup>
          <mo stretchy="false">)</mo>
          <mrow class="MJX-TeXAtom-ORD">
            <mi>T</mi>
          </mrow>
        </msup>
        <mi>x</mi>
        <mo stretchy="false">(</mo>
        <mi>t</mi>
        <mo stretchy="false">)</mo>
      </mstyle>
    </mrow>
    <annotation encoding="application/x-tex">{\displaystyle r&lt;/math&lt;&lt;math&gt;s_{r}(t)=w(r)^{T}x(t)}</annotation>
  </semantics>
</math></span><img src="https://wikimedia.org/api/rest_v1/media/math/render/svg/0e91189cd2f578fce945f067322c9eb3012bfd61" class="mwe-math-fallback-image-inline" aria-hidden="true" style="vertical-align: -0.838ex; width:41.914ex; height:3.176ex;" alt="{\displaystyle r&lt;/math&lt;&lt;math&gt;s_{r}(t)=w(r)^{T}x(t)}"/></span>
</p><p><span class="mwe-math-element"><span class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="display: none;"><math xmlns="http://www.w3.org/1998/Math/MathML"  alttext="{\displaystyle s_{r}(t)=w(r)^{T}H(r)y(t)}">
  <semantics>
    <mrow class="MJX-TeXAtom-ORD">
      <mstyle displaystyle="true" scriptlevel="0">
        <msub>
          <mi>s</mi>
          <mrow class="MJX-TeXAtom-ORD">
            <mi>r</mi>
          </mrow>
        </msub>
        <mo stretchy="false">(</mo>
        <mi>t</mi>
        <mo stretchy="false">)</mo>
        <mo>=</mo>
        <mi>w</mi>
        <mo stretchy="false">(</mo>
        <mi>r</mi>
        <msup>
          <mo stretchy="false">)</mo>
          <mrow class="MJX-TeXAtom-ORD">
            <mi>T</mi>
          </mrow>
        </msup>
        <mi>H</mi>
        <mo stretchy="false">(</mo>
        <mi>r</mi>
        <mo stretchy="false">)</mo>
        <mi>y</mi>
        <mo stretchy="false">(</mo>
        <mi>t</mi>
        <mo stretchy="false">)</mo>
      </mstyle>
    </mrow>
    <annotation encoding="application/x-tex">{\displaystyle s_{r}(t)=w(r)^{T}H(r)y(t)}</annotation>
  </semantics>
</math></span><img src="https://wikimedia.org/api/rest_v1/media/math/render/svg/a2a80c8fbee67029e1ae05c158281ad9419b1576" class="mwe-math-fallback-image-inline" aria-hidden="true" style="vertical-align: -0.838ex; width:22.449ex; height:3.176ex;" alt="{\displaystyle s_{r}(t)=w(r)^{T}H(r)y(t)}"/></span>
</p><p><a href="https://www.bci2000.org/mediawiki/index.php/File:BeamformerHead.png" class="image"><img alt="BeamformerHead.png" src="../images/1/10/BeamformerHead.png" decoding="async" width="400" height="175" /></a>
</p><p>An ideal spatial filter should pass activity from a location of interest with unit gain:
</p><p><span class="mwe-math-element"><span class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="display: none;"><math xmlns="http://www.w3.org/1998/Math/MathML"  alttext="{\displaystyle w(r_{0})H(r)=1,r=r_{0}}">
  <semantics>
    <mrow class="MJX-TeXAtom-ORD">
      <mstyle displaystyle="true" scriptlevel="0">
        <mi>w</mi>
        <mo stretchy="false">(</mo>
        <msub>
          <mi>r</mi>
          <mrow class="MJX-TeXAtom-ORD">
            <mn>0</mn>
          </mrow>
        </msub>
        <mo stretchy="false">)</mo>
        <mi>H</mi>
        <mo stretchy="false">(</mo>
        <mi>r</mi>
        <mo stretchy="false">)</mo>
        <mo>=</mo>
        <mn>1</mn>
        <mo>,</mo>
        <mi>r</mi>
        <mo>=</mo>
        <msub>
          <mi>r</mi>
          <mrow class="MJX-TeXAtom-ORD">
            <mn>0</mn>
          </mrow>
        </msub>
      </mstyle>
    </mrow>
    <annotation encoding="application/x-tex">{\displaystyle w(r_{0})H(r)=1,r=r_{0}}</annotation>
  </semantics>
</math></span><img src="https://wikimedia.org/api/rest_v1/media/math/render/svg/0cf5745fcb2aabd324e2d936aa6b41e3358d1c93" class="mwe-math-fallback-image-inline" aria-hidden="true" style="vertical-align: -0.838ex; width:22.043ex; height:2.843ex;" alt="{\displaystyle w(r_{0})H(r)=1,r=r_{0}}"/></span>
</p><p>while suppressing others
</p><p><span class="mwe-math-element"><span class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="display: none;"><math xmlns="http://www.w3.org/1998/Math/MathML"  alttext="{\displaystyle w(r_{0})H(r)=0,r\neq r_{0}}">
  <semantics>
    <mrow class="MJX-TeXAtom-ORD">
      <mstyle displaystyle="true" scriptlevel="0">
        <mi>w</mi>
        <mo stretchy="false">(</mo>
        <msub>
          <mi>r</mi>
          <mrow class="MJX-TeXAtom-ORD">
            <mn>0</mn>
          </mrow>
        </msub>
        <mo stretchy="false">)</mo>
        <mi>H</mi>
        <mo stretchy="false">(</mo>
        <mi>r</mi>
        <mo stretchy="false">)</mo>
        <mo>=</mo>
        <mn>0</mn>
        <mo>,</mo>
        <mi>r</mi>
        <mo>&#x2260;<!-- ≠ --></mo>
        <msub>
          <mi>r</mi>
          <mrow class="MJX-TeXAtom-ORD">
            <mn>0</mn>
          </mrow>
        </msub>
      </mstyle>
    </mrow>
    <annotation encoding="application/x-tex">{\displaystyle w(r_{0})H(r)=0,r\neq r_{0}}</annotation>
  </semantics>
</math></span><img src="https://wikimedia.org/api/rest_v1/media/math/render/svg/67420ebc25ddf52b93e2087e14b11096510bae11" class="mwe-math-fallback-image-inline" aria-hidden="true" style="vertical-align: -0.838ex; width:22.043ex; height:2.843ex;" alt="{\displaystyle w(r_{0})H(r)=0,r\neq r_{0}}"/></span>
</p><p>However, this is not always possible, and we compute an optimal spatial filter by minimizing the variance of the filter output (source activity):
</p><p><span class="mwe-math-element"><span class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="display: none;"><math xmlns="http://www.w3.org/1998/Math/MathML"  alttext="{\displaystyle \min var(s_{r})\Leftrightarrow \min {\textrm {trace}}\left[w(r)^{T}cov(x)w(r)\right]}">
  <semantics>
    <mrow class="MJX-TeXAtom-ORD">
      <mstyle displaystyle="true" scriptlevel="0">
        <mo movablelimits="true" form="prefix">min</mo>
        <mi>v</mi>
        <mi>a</mi>
        <mi>r</mi>
        <mo stretchy="false">(</mo>
        <msub>
          <mi>s</mi>
          <mrow class="MJX-TeXAtom-ORD">
            <mi>r</mi>
          </mrow>
        </msub>
        <mo stretchy="false">)</mo>
        <mo stretchy="false">&#x21D4;<!-- ⇔ --></mo>
        <mo movablelimits="true" form="prefix">min</mo>
        <mrow class="MJX-TeXAtom-ORD">
          <mrow class="MJX-TeXAtom-ORD">
            <mtext>trace</mtext>
          </mrow>
        </mrow>
        <mrow>
          <mo>[</mo>
          <mrow>
            <mi>w</mi>
            <mo stretchy="false">(</mo>
            <mi>r</mi>
            <msup>
              <mo stretchy="false">)</mo>
              <mrow class="MJX-TeXAtom-ORD">
                <mi>T</mi>
              </mrow>
            </msup>
            <mi>c</mi>
            <mi>o</mi>
            <mi>v</mi>
            <mo stretchy="false">(</mo>
            <mi>x</mi>
            <mo stretchy="false">)</mo>
            <mi>w</mi>
            <mo stretchy="false">(</mo>
            <mi>r</mi>
            <mo stretchy="false">)</mo>
          </mrow>
          <mo>]</mo>
        </mrow>
      </mstyle>
    </mrow>
    <annotation encoding="application/x-tex">{\displaystyle \min var(s_{r})\Leftrightarrow \min {\textrm {trace}}\left[w(r)^{T}cov(x)w(r)\right]}</annotation>
  </semantics>
</math></span><img src="https://wikimedia.org/api/rest_v1/media/math/render/svg/59df4c65146fa3daa4a2989003999c92e730c46d" class="mwe-math-fallback-image-inline" aria-hidden="true" style="vertical-align: -1.005ex; width:43.623ex; height:3.343ex;" alt="{\displaystyle \min var(s_{r})\Leftrightarrow \min {\textrm {trace}}\left[w(r)^{T}cov(x)w(r)\right]}"/></span>
</p><p>Two constraints:
</p><p><span class="mwe-math-element"><span class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="display: none;"><math xmlns="http://www.w3.org/1998/Math/MathML"  alttext="{\displaystyle w(r)H(r)=1}">
  <semantics>
    <mrow class="MJX-TeXAtom-ORD">
      <mstyle displaystyle="true" scriptlevel="0">
        <mi>w</mi>
        <mo stretchy="false">(</mo>
        <mi>r</mi>
        <mo stretchy="false">)</mo>
        <mi>H</mi>
        <mo stretchy="false">(</mo>
        <mi>r</mi>
        <mo stretchy="false">)</mo>
        <mo>=</mo>
        <mn>1</mn>
      </mstyle>
    </mrow>
    <annotation encoding="application/x-tex">{\displaystyle w(r)H(r)=1}</annotation>
  </semantics>
</math></span><img src="https://wikimedia.org/api/rest_v1/media/math/render/svg/0c44c842797e33fa27431f51a3a21bf4f3421d1f" class="mwe-math-fallback-image-inline" aria-hidden="true" style="vertical-align: -0.838ex; width:13.705ex; height:2.843ex;" alt="{\displaystyle w(r)H(r)=1}"/></span>
</p><p><span class="mwe-math-element"><span class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="display: none;"><math xmlns="http://www.w3.org/1998/Math/MathML"  alttext="{\displaystyle \min var(s)}">
  <semantics>
    <mrow class="MJX-TeXAtom-ORD">
      <mstyle displaystyle="true" scriptlevel="0">
        <mo movablelimits="true" form="prefix">min</mo>
        <mi>v</mi>
        <mi>a</mi>
        <mi>r</mi>
        <mo stretchy="false">(</mo>
        <mi>s</mi>
        <mo stretchy="false">)</mo>
      </mstyle>
    </mrow>
    <annotation encoding="application/x-tex">{\displaystyle \min var(s)}</annotation>
  </semantics>
</math></span><img src="https://wikimedia.org/api/rest_v1/media/math/render/svg/53998425bab95e2e3133da01e147f9beba01c7c9" class="mwe-math-fallback-image-inline" aria-hidden="true" style="vertical-align: -0.838ex; width:10.568ex; height:2.843ex;" alt="{\displaystyle \min var(s)}"/></span>
</p><p>After some algebra:
</p><p><span class="mwe-math-element"><span class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="display: none;"><math xmlns="http://www.w3.org/1998/Math/MathML"  alttext="{\displaystyle w(r)=\left[H^{T}(r)cov^{-1}(x)H(r)\right]^{-1}H^{T}(r)cov^{-1}(x)}">
  <semantics>
    <mrow class="MJX-TeXAtom-ORD">
      <mstyle displaystyle="true" scriptlevel="0">
        <mi>w</mi>
        <mo stretchy="false">(</mo>
        <mi>r</mi>
        <mo stretchy="false">)</mo>
        <mo>=</mo>
        <msup>
          <mrow>
            <mo>[</mo>
            <mrow>
              <msup>
                <mi>H</mi>
                <mrow class="MJX-TeXAtom-ORD">
                  <mi>T</mi>
                </mrow>
              </msup>
              <mo stretchy="false">(</mo>
              <mi>r</mi>
              <mo stretchy="false">)</mo>
              <mi>c</mi>
              <mi>o</mi>
              <msup>
                <mi>v</mi>
                <mrow class="MJX-TeXAtom-ORD">
                  <mo>&#x2212;<!-- − --></mo>
                  <mn>1</mn>
                </mrow>
              </msup>
              <mo stretchy="false">(</mo>
              <mi>x</mi>
              <mo stretchy="false">)</mo>
              <mi>H</mi>
              <mo stretchy="false">(</mo>
              <mi>r</mi>
              <mo stretchy="false">)</mo>
            </mrow>
            <mo>]</mo>
          </mrow>
          <mrow class="MJX-TeXAtom-ORD">
            <mo>&#x2212;<!-- − --></mo>
            <mn>1</mn>
          </mrow>
        </msup>
        <msup>
          <mi>H</mi>
          <mrow class="MJX-TeXAtom-ORD">
            <mi>T</mi>
          </mrow>
        </msup>
        <mo stretchy="false">(</mo>
        <mi>r</mi>
        <mo stretchy="false">)</mo>
        <mi>c</mi>
        <mi>o</mi>
        <msup>
          <mi>v</mi>
          <mrow class="MJX-TeXAtom-ORD">
            <mo>&#x2212;<!-- − --></mo>
            <mn>1</mn>
          </mrow>
        </msup>
        <mo stretchy="false">(</mo>
        <mi>x</mi>
        <mo stretchy="false">)</mo>
      </mstyle>
    </mrow>
    <annotation encoding="application/x-tex">{\displaystyle w(r)=\left[H^{T}(r)cov^{-1}(x)H(r)\right]^{-1}H^{T}(r)cov^{-1}(x)}</annotation>
  </semantics>
</math></span><img src="https://wikimedia.org/api/rest_v1/media/math/render/svg/eb68c33329973efc66999524c0181110d3edf67e" class="mwe-math-fallback-image-inline" aria-hidden="true" style="vertical-align: -1.005ex; width:46.983ex; height:3.843ex;" alt="{\displaystyle w(r)=\left[H^{T}(r)cov^{-1}(x)H(r)\right]^{-1}H^{T}(r)cov^{-1}(x)}"/></span>
</p><p>The adaptive filter is computed from the forward model for a given position <span class="mwe-math-element"><span class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="display: none;"><math xmlns="http://www.w3.org/1998/Math/MathML"  alttext="{\displaystyle r}">
  <semantics>
    <mrow class="MJX-TeXAtom-ORD">
      <mstyle displaystyle="true" scriptlevel="0">
        <mi>r</mi>
      </mstyle>
    </mrow>
    <annotation encoding="application/x-tex">{\displaystyle r}</annotation>
  </semantics>
</math></span><img src="https://wikimedia.org/api/rest_v1/media/math/render/svg/0d1ecb613aa2984f0576f70f86650b7c2a132538" class="mwe-math-fallback-image-inline" aria-hidden="true" style="vertical-align: -0.338ex; width:1.049ex; height:1.676ex;" alt="{\displaystyle r}"/></span>, and the covariance matrix of the data.
</p>
<h3><span class="mw-headline" id="Implementation_with_the_BCI2000_Matlab_filter">Implementation with the BCI2000 Matlab filter</span></h3>
<h4><span class="mw-headline" id="bci_StartRun_function">bci_StartRun function</span></h4>
<pre>function bci_StartRun

% shared BCI2000 Parameters and states are global variables.
global bci_Parameters bci_States

% the following variables are used in the computation, and are needed over multiple iterations
global fsample nchans nsamples
global sum_covariance sum_count
global norm_s norm_ss norm_n
global H C w 

fsample  = sscanf(bci_Parameters.SamplingRate{1}, '%fHz');
nchans   = sscanf(bci_Parameters.SourceCh{1}, '%d');
nsamples = sscanf(bci_Parameters.SampleBlockSize{1}, '%d');

% these are for the accumulated normalization
norm_n  = 0;
norm_s  = 0;
norm_ss = 0;

% these are for the accumulated data covariance estimate
sum_covariance = zeros(nchans, nchans);
sum_count      = 0;

% this is the forward model, which describes how the source projects onto the channels
% in real applications the forward model would be computed using a biophysical model
% but here the source projects equally strong onto all channels
H = ones(nchans,1)/nchans;

% these are empty to start with
C = zeros(nchans, nchans);
w = zeros(1,nchans);
</pre>
<h4><span class="mw-headline" id="bci_Process_Function">bci_Process Function</span></h4>
<pre>function out_signal = bci_Process( in_signal )

&lt;...&gt;

flt_signal = in_signal;

% apply baseline correction
for i=1:nchan
 flt_signal(i,:) = flt_signal(i,:) - mean(flt_signal(i,:));
end

% compute the covariance using a running sum
sum_covariance = sum_covariance + flt_signal*flt_signal';
sum_count      = sum_count      + 1;

% compute the beamformer spatial filter
C = sum_covariance/sum_count;
w = inv(H' * inv(C) * H) * H' * inv(C);

% apply the beamformer spatial filter to the data
out_signal = w * flt_signal;

% compute the total power in the signal for the present block
out_signal = sqrt(sum(out_signal.^2));

% we could in principle stop here, but normalization of the control signal is required as well 
% the normalization could also be done with standard BCI2000 filter 

% if the signal is all zero, then the inverse covariance cannot be computed
% which results in a filter output that is not a number (nan)
if ~isnan(out_signal)
&#160;% compute the running sum of the beamformer power
 for i=1:numel(out_signal)
   norm_n  = norm_n  + 1;
   norm_s  = norm_s  + out_signal(i);
   norm_ss = norm_ss + out_signal(i)^2;
  end
end

% compute the normalized output
norm_avg   = norm_s / norm_n;
norm_std   = sqrt(norm_ss/norm_n - norm_s^2/norm_n^2);
out_signal = (out_signal - norm_avg)/norm_std;
</pre>
<h3><span class="mw-headline" id="Beamformer_source_reconstruction">Beamformer source reconstruction</span></h3>
<ul><li>adaptive spatial filter</li>
<li>implementation in few lines of Matlab code</li>
<li>recursive updating of covariance</li>
<li>output used as control signal</li></ul>
<h2><span class="mw-headline" id="Conclusions">Conclusions</span></h2>
<ul><li>Small-batch processing in Matlab</li>
<li>Incremental algorithms</li>
<li>Within the pipeline</li>
<li>Useful for Rapid Application Development</li>
<li>Fast for Research &amp; Development</li>
<li>Fast enough (?) for online applications</li>
<li>once proven, port algorithm to C++</li></ul>
<h2><span class="mw-headline" id="See_also">See also</span></h2>
<p><a href="Programming_Tutorial%253AImplementing_a_Matlab-based_Filter.html" class="mw-redirect" title="Programming Tutorial:Implementing a Matlab-based Filter">Programming Tutorial:Implementing a Matlab-based Filter</a>,
<a href="Programming_Reference%253AMatlabFilter.html" title="Programming Reference:MatlabFilter">Programming Reference:MatlabFilter</a>, 
<a href="User_Reference%253AMatlabFilter.html" class="mw-redirect" title="User Reference:MatlabFilter">User Reference:MatlabFilter</a>, 
<a href="Contributions%253AFieldTripBuffer.html" title="Contributions:FieldTripBuffer">Contributions:FieldTripBuffer</a>
</p>
<!-- 
NewPP limit report
Cached time: 20241129160700
Cache expiry: 86400
Reduced expiry: false
Complications: [show‐toc]
CPU time usage: 0.944 seconds
Real time usage: 0.967 seconds
Preprocessor visited node count: 115/1000000
Post‐expand include size: 0/2097152 bytes
Template argument size: 0/2097152 bytes
Highest expansion depth: 2/100
Expensive parser function count: 0/100
Unstrip recursion depth: 0/20
Unstrip post‐expand size: 504/5000000 bytes
-->
<!--
Transclusion expansion time report (%,ms,calls,template)
100.00%    0.000      1 -total
-->

<!-- Saved in parser cache with key wikidb-bci_:pcache:idhash:1928-0!canonical and timestamp 20241129160659 and revision id 9238.
 -->
</div></div><div class="printfooter">
Retrieved from "<a dir="ltr" href="http://www.bci2000.org/mediawiki/index.php?title=Programming_Tutorial:Implementing_an_advanced_Matlab-based_Filter&amp;oldid=9238">http://www.bci2000.org/mediawiki/index.php?title=Programming_Tutorial:Implementing_an_advanced_Matlab-based_Filter&amp;oldid=9238</a>"</div>
 </div>
</body>
</html>